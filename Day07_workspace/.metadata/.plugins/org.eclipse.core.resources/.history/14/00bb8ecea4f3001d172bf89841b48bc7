package forstatement;

public class For1 {
	public static void main(String[] args) {
		// 유한반복 : for반복문을 주로 이용함
		// 시작 / 끝 / 변화 / 할 일
		// - 내부에서 반복중에 수행하는 것에 아주 관심이 많음
		// - 그 반복은 "몇번" 수행하게 되는가?
		int num1 = 1;
		while (num1 <= 10) {
			System.out.print(num1 + " ");
			num1 += 1;
		} System.out.println();
		
		// 유한반복시 주의사항 : 변화량 파악을 실수하는 경우
		// - 반복횟수가 지나치게 많아짐
		// - 내부에서 숫자를 골라내는 것은, 한 종류 이상의 것이 필요할 때 하게 됨
		//   ex) 3의 배수이거나, 5의 배수인 것
		num1 = 3;
		while (num1 <= 9) {
			System.out.print(num1 + " ");
			num1 += 3;
		} System.out.println();
		
		// while 유한반복의 문제 : 변수의 관리가 어려움 / 코드가 섞여있음
		// - while 유한반복의 각 요소를 문법으로 강제하는 구조
		// + 변수를 1회성으로 준비해서 쓰고 버릴 수 있음
		// + 과정이 분리가 되어 있어, for를 위한 변수의 값만 안건드리면 반복을 무조건 수행함
		for (int x = 2; x <= 10; x = x + 2) {
			// 보조제어문 continue를 조합하여 쓰는 경우가 많음
			// - 다음 단계로 건너뛰기
			continue;
			// if (x % 3 == 0 || x % 7 == 0) continue;
			// System.out.print(x + " ");
		} System.out.println();
		// 1) 변수확인 -> 조건식 -> 종속문 -> 증감식 -> 조건식 .....2
	}
}









